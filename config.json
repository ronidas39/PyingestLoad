{
    "server_uri": "bolt://localhost:7687",
    "admin_user": "neo4j",
    "admin_pass": "G7m$Xp9@",
    "database": "NEO4J",
    "files": [
        {
            "url": "/Users/roni/Documents/CLIENT_WORK/entegris/newdata/child.csv",
            "type": "csv",
            "compression": "none",
            "skip_records": 1,
            "chunk_size": 1000,
            "field_separator": ",",
            "cql": "with $dict.rows AS rows UNWIND rows AS event with event WHERE event.batch_number_output IS NOT NULL AND event.batch_number_input IS NOT NULL AND event.manufacturing_site IS NOT NULL AND event.work_order_no IS NOT NULL AND event.plant is not null AND event.batch_number_input <> event.batch_number_output AND (event.genealogy_level = '02' OR event.genealogy_level = '03') MERGE (o:Batch {batchNumber: event.batch_number_output, plantCode: event.plant}) MERGE (i:Batch {batchNumber: event.batch_number_input, plantCode: event.manufacturing_site}) MERGE (o)-[r:WORK_ORDER]->(i) SET r.workOrderNumber = event.work_order_no"
          },
     
      {
        "url": "/Users/roni/Documents/CLIENT_WORK/entegris/newdata/child.csv",
        "type": "csv",
        "compression": "none",
        "skip_records": 1,
        "chunk_size": 1000,
        "field_separator": ",",
        "cql": "with $dict.rows AS rows UNWIND rows AS event with event WHERE event.batch_number_output IS NOT NULL AND event.batch_number_input IS NOT NULL AND event.manufacturing_site IS NOT NULL AND event.po_number<>'' AND event.plant is not null AND (event.genealogy_level = '02' OR event.genealogy_level = '03') MERGE (o:Batch {batchNumber: event.batch_number_output, plantCode: event.plant}) MERGE (i:Batch {batchNumber: event.batch_number_input, plantCode: event.manufacturing_site}) MERGE (o)-[r:PURCHASE_ORDER{purchaseOrderNumber:event.po_number}]->(i)" 
      }
    ],
    "pre_ingest": [
      "CREATE CONSTRAINT batch_unique_key IF NOT EXISTS for (batch:Batch) REQUIRE (batch.batchNumber, batch.plantCode) IS NODE KEY"
    ],
    "post_ingest": [
      "MATCH (n) RETURN count(n)"
    ]
  }
  